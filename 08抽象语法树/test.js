const attribute =
  /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"))?/

// const attribute =
//   /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/

/* 
  ^\s*  匹配多个或 0 个 空格开头
  ([^\s"'<>\/=]+) 匹配不是 \s (空格) " ' <> \/ =  一个或多个 。 比如 class id 等

   (?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))? 匹配 =xxx 0次或多次 。因为有 disbale 这样子没有值的属性 。默认值就是 true

   (?:\s*(=)\s*)  =>  ?: 匹配但不捕获 ， 匹配 0 或多个空格 然后是等号 然后还是0 或多个空格 。 比如 '    =     ' 。 但是 = 会被捕获。因为不是 （?:=）

   (?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+))    匹配值。 最外层括号的内容匹配不捕获

    "([^"]*)"+   匹配如 "asda" 这样子的值 , 捕获出   asda
    '([^']*)'+   匹配如 'asda'   ，捕获出 asda
    ([^\s"'=<>`]+)  匹配没有 ' "  空格 = < >  的字符串

*/


const dynamicArgAttribute =
  /^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+?\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/


const ncname = `[a-zA-Z_][\\-\\.0-9_a-zA-Z]*`   // 标签名
const qnameCapture = `((?:${ncname}\\:)?${ncname})`   // 标签名捕获
const startTagOpen = new RegExp(`^<${qnameCapture}`)   // 匹配开始标签名
const startTagClose = /^\s*(\/?)>/     // 匹配单标签闭合  />  或者 >
const endTag = new RegExp(`^<\\/${qnameCapture}[^>]*>`)  // 匹配结束标签名  </div>



console.log('    asd = "123"   '.match(attribute));
